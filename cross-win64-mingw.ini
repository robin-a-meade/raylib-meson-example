# --------------------------------------------------------------------------
# Cross build definition file for compiling a 64-bit x86_64 executable for Windows
#
# Set up a build directory:
#
#   meson setup --cross-file cross-win64-mingw.ini build-dir-for-win64-mingw
#
# Compile:
#
#   meson compile -v -C build-dir-for-win64-mingw
#
# Run:
#
#   build-dir-for-win64-mingw/shapes_bouncing_ball
#
# --------------------------------------------------------------------------

[binaries]
c = 'x86_64-w64-mingw32-gcc'
cpp = 'x86_64-w64-mingw32-g++'
ar = 'x86_64-w64-mingw32-ar'
strip = 'x86_64-w64-mingw32-strip'
exe_wrapper = 'wine64' # A command used to run generated executables.

# [properties]
# DEPRECATION: c_link_args in the [properties] section of the machine file is deprecated, use the [built-in options] section.
[built-in options]
# -lssp Fixes: undefined reference to `__strcpy_chk'
# -lwinmm Fixes: undefined reference to `timeEndPeriod' and 'timeBeginPeriod'
# NOT SURE IF NEEDED: '-lSDL2main', '-lSDL2'
#    Would requires SDL2
#    On Fedora for MINGW:
#       sudo dnf install mingw64-SDL2, or
#       sudo dnf install mingw64-SDL2-static, or
#    On Windows: Maybe download from here https://www.libsdl.org/
#    (I'm not sure about linking windows DLL's statically)
#    UPDATE: SDL2 IS NOT NEEDED AFTERALL?!! Not sure why I thought it was. I was just trying everything.
#    For the record, at one point I had this:
#    c_link_args = ['-lssp', '-lSDL2main', '-lSDL2', '-lm', '-luser32',
#       '-lgdi32', '-lwinmm', '-limm32', '-lole32', '-loleaut32', '-lversion',
#       '-luuid', '-ladvapi32', '-lsetupapi', '-lshell32', '-ldinput8', '-lmingw32',
#       '-Wl,--no-undefined', '-lmwindows']
#    I pieced that together from looking at:
#      /usr/x86_64-w64-mingw32/sys-root/mingw/lib/cmake/SDL2/SDL2staticTargets.cmake
#    and reading:
#      https://github.com/msys2/MINGW-packages/issues/6857
#    NOTE: Had to remove -luser32 because it causes error: "multiple definition of CloseWindow"

c_link_args = ['-lssp', '-lwinmm']

[host_machine]
system = 'windows'
cpu_family = 'x86_64'
cpu = 'x86_64'
endian = 'little'
